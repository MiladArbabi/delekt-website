# HTTP → HTTPS (unify to apex)
server {
    listen 80;
    listen [::]:80;
    server_name delekt.com www.delekt.com;
    return 301 https://delekt.com$request_uri;
}

# HTTPS content — apex only
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name delekt.com;

    root /var/www/delekt.com;
    index index.html;

    # Serve static files; also allow /path -> /path.html
    location / {
        try_files $uri $uri.html $uri/ =404;
    }

    # --- Redirect rules (ORDER MATTERS) ---
    # 1) Specific: preview/thanks.html -> /thanks  (one hop)
    rewrite ^/preview/thanks\.html$ /thanks permanent;

    # 2) /preview root -> /
    rewrite ^/preview/?$ / permanent;

    # 3) Everything else under /preview -> drop the prefix
    rewrite ^/preview/(.*)$ /$1 permanent;

    # 4) Canonicalize /thanks.html -> /thanks
    rewrite ^/thanks\.html$ /thanks permanent;

    error_page 404 /404.html;

    # TLS (Certbot)
    ssl_certificate /etc/letsencrypt/live/delekt.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/delekt.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# HTTPS redirect — www -> apex (needs TLS for SNI)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.delekt.com;
    return 301 https://delekt.com$request_uri;

    ssl_certificate /etc/letsencrypt/live/delekt.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/delekt.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
